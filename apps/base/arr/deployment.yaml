apiVersion: apps/v1
kind: Deployment
metadata:
  name: arr-stack
  labels: { app: arr-stack }
spec:
  replicas: 1
  strategy: { type: Recreate }
  selector:
    matchLabels: { app: arr-stack }
  template:
    metadata:
      labels: { app: arr-stack }
    spec:
      nodeName: miniserver
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 10.43.0.10
        options:
          - name: ndots
            value: "2"
      volumes:
        - name: dev-net-tun
          hostPath: { path: /dev/net/tun, type: CharDevice }
        - name: gluetun
          persistentVolumeClaim:
            claimName: gluetun
        - name: qbit-config
          persistentVolumeClaim:
            claimName: qbit-config-protected
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: radarr-config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: lidarr-config
          persistentVolumeClaim:
            claimName: lidarr-config
        - name: prowlarr-config
          persistentVolumeClaim:
            claimName: prowlarr-config
        - name: media
          hostPath: { path: /media, type: Directory }
        - name: downloads
          hostPath: { path: /media/Torrent/Downloads, type: Directory }
        - name: movies
          hostPath: { path: /media/Torrent/Movies, type: Directory }
        - name: shows
          hostPath: { path: /media/Torrent/Shows, type: Directory }
        - name: pf-state
          emptyDir: {}
        - name: pf-sync
          configMap:
            name: gluetun-pf-sync
            defaultMode: 0755

      initContainers:
        - name: sysctl-init
          image: busybox:1.36
          securityContext:
            privileged: true
          command: ["sh","-c",<<-'EOS'
            set -eux
            sysctl -w net.ipv4.conf.all.rp_filter=0
            sysctl -w net.ipv4.conf.default.rp_filter=0
            sysctl -w net.ipv4.conf.tun0.rp_filter=0 || true
            EOS]
        - name: fix-perms
          image: busybox:1.36
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          command:
            - sh
            - -c
            - |
              set -eux
              echo "fix-perms: listing /config and /gluetun (if mounted)"
              ls -la /config 2>/dev/null || true
              find /config -maxdepth 2 -type f -print 2>/dev/null || true
              # Diagnose qB config presence
              if [ -f /config/qBittorrent/qBittorrent.conf ]; then
                echo "fix-perms: found /config/qBittorrent/qBittorrent.conf"
              else
                echo "fix-perms: qBittorrent.conf missing"
              fi
              # Gluetun: remove empty servers.json which breaks startup
              if [ -f /gluetun/servers.json ] && [ ! -s /gluetun/servers.json ]; then
                echo "fix-perms: removing empty /gluetun/servers.json"
                rm -f /gluetun/servers.json
              fi
              chown -R 1000:1000 /config /gluetun 2>/dev/null || true
              chmod -R u+rwX,g+rwX /config /gluetun 2>/dev/null || true
          volumeMounts:
            - { name: qbit-config, mountPath: /config }
            - { name: gluetun,     mountPath: /gluetun }

      containers:
        - name: gluetun
          image: qmcgaw/gluetun:latest
          securityContext:
            privileged: true
            capabilities: { add: ["NET_ADMIN"] }
          envFrom:
            - secretRef: { name: gluetun-env }
          env:
            - { name: FIREWALL_INPUT_PORTS, value: "8020,8989,7878,9696,8686,8191" }
            - { name: HEALTH_TARGET_ADDRESS, value: "127.0.0.1:9999" }
            - { name: VPN_PORT_FORWARDING_STATUS_FILE, value: "/pf/state/forwarded_port" }
            - { name: FIREWALL_OUTBOUND_SUBNETS, value: "10.42.0.0/16,10.43.0.0/16" }
            - { name: BLOCK_IPV6, value: "on" }
          volumeMounts:
            - { name: dev-net-tun, mountPath: /dev/net/tun }
            - { name: gluetun, mountPath: /gluetun }
            - { name: pf-state, mountPath: /pf/state }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }       

        - name: pf-sync
          image: curlimages/curl:8.7.1
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c","/scripts/pf-sync.sh"]
          env:
            - { name: PF_FILE, value: "/pf/state/forwarded_port" }
            - { name: QB_WEBUI_PORT, value: "8020" }
            - { name: QB_USERNAME, valueFrom: { secretKeyRef: { name: qb-webui-creds, key: username } } }
            - { name: QB_PASSWORD, valueFrom: { secretKeyRef: { name: qb-webui-creds, key: password } } }
          volumeMounts:
            - { name: pf-sync, mountPath: /scripts/pf-sync.sh, subPath: pf-sync.sh }
            - { name: pf-state, mountPath: /pf/state }
          resources:
            requests: { cpu: "5m", memory: "16Mi" }
            limits:   { cpu: "25m", memory: "64Mi" }

        - name: qbittorrent
          image: lscr.io/linuxserver/qbittorrent
          env:
            - { name: PUID, value: "1000" }
            - { name: PGID, value: "1000" }
            - { name: TZ,   value: "America/Los_Angeles" }
            - { name: WEBUI_PORT, value: "8020" }
            - { name: TORRENTING_PORT, value: "6881" }
            - { name: DOCKER_MODS, value: "ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest" }
          ports:
            - { name: webui, containerPort: 8020, protocol: TCP }
          volumeMounts:
            - { name: qbit-config, mountPath: /config }
            - { name: downloads,   mountPath: /downloads }
            - { name: movies,      mountPath: /movies }
            - { name: shows,       mountPath: /shows }
            - { name: media,       mountPath: /media }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }  

        - name: sonarr
          image: lscr.io/linuxserver/sonarr:latest
          env:
            - { name: PUID, value: "1000" }
            - { name: PGID, value: "1000" }
            - { name: TZ,   value: "America/Los_Angeles" }
          volumeMounts:
            - { name: sonarr-config, mountPath: /config }
            - { name: shows,         mountPath: /tv }
            - { name: downloads,     mountPath: /downloads }
            - { name: media,         mountPath: /media }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }  

        - name: radarr
          image: lscr.io/linuxserver/radarr:latest
          env:
            - { name: PUID, value: "1000" }
            - { name: PGID, value: "1000" }
            - { name: TZ,   value: "America/Los_Angeles" }
          volumeMounts:
            - { name: radarr-config, mountPath: /config }
            - { name: movies,        mountPath: /movies }
            - { name: downloads,     mountPath: /downloads }
            - { name: media,         mountPath: /media }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }  

        - name: lidarr
          image: lscr.io/linuxserver/lidarr:latest
          env:
            - { name: PUID, value: "1000" }
            - { name: PGID, value: "1000" }
            - { name: TZ,   value: "America/Los_Angeles" }
          volumeMounts:
            - { name: lidarr-config, mountPath: /config }
            - { name: media,         mountPath: /media }
            - { name: downloads,     mountPath: /downloads }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }  

        - name: prowlarr
          image: lscr.io/linuxserver/prowlarr:latest
          env:
            - { name: PUID, value: "1000" }
            - { name: PGID, value: "1000" }
            - { name: TZ,   value: "America/Los_Angeles" }
            - { name: DOTNET_SYSTEM_NET_DISABLEIPV6, value: "1" }
          volumeMounts:
            - { name: prowlarr-config, mountPath: /config }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }  

        - name: flaresolverr
          image: 21hsmw/flaresolverr:nodriver
          env:
            - { name: LOG_LEVEL, value: "info" }
            - { name: LOG_HTML,  value: "false" }
            - { name: CAPTCHA_SOLVER, value: "none" }
            - { name: TZ,   value: "America/Los_Angeles" }
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "24", memory: "2Gi" }  