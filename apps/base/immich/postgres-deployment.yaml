apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-postgres
  labels:
    app: immich
    component: postgres
spec:
  serviceName: immich-postgres
  replicas: 1
  selector:
    matchLabels:
      app: immich
      component: postgres
  template:
    metadata:
      labels:
        app: immich
        component: postgres
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999 
      containers:
      - name: postgres
        image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: immich-secret
              key: DB_PASSWORD
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: immich-config
              key: DB_USERNAME
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: immich-config
              key: DB_DATABASE_NAME
        - name: POSTGRES_INITDB_ARGS
          value: "--data-checksums"
        command: 
        - postgres
        - -c
        - shared_preload_libraries=vectors.so
        - -c
        - search_path="$$user", public, vectors
        - -c
        - logging_collector=on
        - -c
        - max_wal_size=2GB
        - -c
        - shared_buffers=512MB
        - -c
        - wal_compression=on
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "2"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - --dbname=immich
            - --username=immich
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: postgres-data
        hostPath:
          path: /NAS/Cloud/Immich/postgres
          type: DirectoryOrCreate