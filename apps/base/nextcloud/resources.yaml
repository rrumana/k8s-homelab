# PVCs and one-shot migration Jobs for Nextcloud - Longhorn migration
# Sizing rationale (initial): Based on currently bound capacities as safe ceiling.
# - App data: 500Gi -> round up to 512Gi -> double = 1Ti
# - Postgres: 20Gi -> 32Gi -> double = 64Gi
# - Redis: 8Gi (power of two) -> double = 16Gi
# Note: Longhorn is thin-provisioned; over-provisioning does not immediately consume disk.

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-appdata-lh
  namespace: nextcloud
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  labels:
    app.kubernetes.io/name: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Ti

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-postgresql-data-lh
  namespace: nextcloud
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  labels:
    app.kubernetes.io/name: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-redis-data-lh
  namespace: nextcloud
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  labels:
    app.kubernetes.io/name: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi