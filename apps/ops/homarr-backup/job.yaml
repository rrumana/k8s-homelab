apiVersion: batch/v1
kind: Job
metadata:
  name: homarr-backup
  namespace: homarr
  annotations:
    # Ensure PVCs exist before running; lower (more negative) waves run first
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app.kubernetes.io/name: homarr-backup
spec:
  ttlSecondsAfterFinished: 86400
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homarr-backup
    spec:
      serviceAccountName: homarr
      restartPolicy: Never
      containers:
        - name: archive-files
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -euxo pipefail
              ts="$(date -u +%Y%m%dT%H%M%SZ)"
              mkdir -p /backup/files
              # Create tarball of the Homarr persistent data
              cd /source
              tar czf "/backup/files/homarr-appdata-${ts}.tgz" .
              sha256sum "/backup/files/homarr-appdata-${ts}.tgz" > "/backup/files/homarr-appdata-${ts}.tgz.sha256"
          volumeMounts:
            - name: source
              mountPath: /source
              readOnly: true
            - name: backup
              mountPath: /backup
        - name: dump-k8s
          image: bitnami/kubectl:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -euxo pipefail
              mkdir -p /backup/k8s
              # Export the core Kubernetes resources for Homarr into the backup PVC
              kubectl get deploy homarr -n homarr -o yaml > /backup/k8s/deployment.yaml
              kubectl get svc homarr -n homarr -o yaml > /backup/k8s/service.yaml
              kubectl get ingress homarr -n homarr -o yaml > /backup/k8s/ingress.yaml || true
              kubectl get pvc homarr-appdata-protected -n homarr -o yaml > /backup/k8s/pvc.yaml
              kubectl get secret homarr-env -n homarr -o yaml > /backup/k8s/secret-homarr-env.yaml || true
              kubectl get serviceaccount homarr -n homarr -o yaml > /backup/k8s/serviceaccount.yaml
              kubectl get all -n homarr -o wide > /backup/k8s/resources.txt
          volumeMounts:
            - name: backup
              mountPath: /backup
      volumes:
        - name: source
          persistentVolumeClaim:
            claimName: homarr-appdata-protected
            readOnly: true
        - name: backup
          persistentVolumeClaim:
            claimName: homarr-backup