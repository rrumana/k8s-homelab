apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homarr-backup
  namespace: homarr
  labels:
    recurring-job.longhorn.io/source: enabled
    recurring-job-group.longhorn.io/default: enabled
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn-protected
  resources:
    requests:
      storage: 2Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: homarr-backup
  namespace: homarr
  annotations:
    # Ensure PVCs exist before running; lower (more negative) waves run first
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app.kubernetes.io/name: homarr-backup
spec:
  ttlSecondsAfterFinished: 86400
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homarr-backup
    spec:
      serviceAccountName: homarr
      restartPolicy: Never
      containers:
        - name: archive-files
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -eux
              ts="$(date -u +%Y%m%dT%H%M%SZ)"
              mkdir -p /backup/files
              # Create tarball of the Homarr persistent data
              cd /source
              tar czf "/backup/files/homarr-appdata-${ts}.tgz" .
              sha256sum "/backup/files/homarr-appdata-${ts}.tgz" > "/backup/files/homarr-appdata-${ts}.tgz.sha256"
          volumeMounts:
            - name: source
              mountPath: /source
              readOnly: true
            - name: backup
              mountPath: /backup
        # dump-k8s sidecar removed
      volumes:
        - name: source
          persistentVolumeClaim:
            claimName: homarr-appdata-protected
            readOnly: true
        - name: backup
          persistentVolumeClaim:
            claimName: homarr-backup